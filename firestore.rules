rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
  
    match /banners/{document} {
    	allow read: if true
      allow write, update, delete, create: 
        if request.auth != null 
        && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true
    }
    
    match /products/{document} {
    	allow read: 
      	if true
      allow write, update, delete, create: 
        if request.auth != null 
        && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true
    }
    
    match /categories/{document} {
    	allow read: if true
      allow write, update, delete, create: 
        if request.auth != null 
        && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true
    }
    
    match /locations/{document} {
    	allow read: if true
      allow write, update, delete: 
        if request.auth != null 
        && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true
    }
    
    match /orders/{document} {
        allow read, write, update, create:
      	if request.auth != null
        && (resource.data.user_id == request.auth.uid
        || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true)
      allow delete:
      	if request.auth != null
        && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true
    }
    
    match /users/{userId}/{documents=**} {
    	allow delete:
      	if request.auth != null
        && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true
    	
      allow read:
      	if request.auth != null
        && (request.auth.uid == userId 
        || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true)
        
      allow write, update:
      	if request.auth != null
        && (request.auth.uid == userId 
        || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true)
        && (!('isAdmin' in request.resource.data) 
        || request.resource.data['isAdmin'] == resource.data.isAdmin)
        
      allow create:
      	if request.resource.data['isAdmin'] != true
    }
    
  }
}